"""add_is_active_column_to_chat_sessions

Revision ID: 4f4ec4f412ce
Revises: add_scan_metadata_fix
Create Date: 2025-08-08 16:20:16.850968

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4f4ec4f412ce'
down_revision: Union[str, None] = 'add_scan_metadata_fix'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('chat_messages', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('chat_messages', sa.Column('message_type', sa.String(length=50), nullable=True))
    op.add_column('chat_messages', sa.Column('tokens_used', sa.Integer(), nullable=True))
    op.add_column('chat_messages', sa.Column('model_used', sa.String(length=100), nullable=True))
    op.add_column('chat_messages', sa.Column('response_time_ms', sa.Integer(), nullable=True))
    op.add_column('chat_messages', sa.Column('context_data', sa.JSON(), nullable=True))
    op.create_foreign_key(None, 'chat_messages', 'users', ['user_id'], ['id'])
    op.add_column('chat_sessions', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('chat_sessions', sa.Column('session_metadata', sa.JSON(), nullable=True))
    op.alter_column('repositories', 'default_branch',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index('idx_repositories_is_active', table_name='repositories')
    op.drop_column('repositories', 'scan_results')
    op.drop_column('repositories', 'last_scan_at')
    op.add_column('scan_templates', sa.Column('config', sa.JSON(), nullable=False))
    op.alter_column('scan_templates', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('scan_templates', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_column('scan_templates', 'file_extensions')
    op.drop_column('scan_templates', 'excluded_paths')
    op.drop_column('scan_templates', 'rules')
    op.drop_column('scan_templates', 'is_active')
    op.alter_column('scans', 'started_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('scans', 'completed_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_index('ix_users_github_username', table_name='users')
    op.alter_column('vulnerabilities', 'recommendation',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('vulnerabilities', 'detected_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('vulnerabilities', 'is_false_positive')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('vulnerabilities', sa.Column('is_false_positive', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.alter_column('vulnerabilities', 'detected_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('vulnerabilities', 'recommendation',
               existing_type=sa.TEXT(),
               nullable=True)
    op.create_index('ix_users_github_username', 'users', ['github_username'], unique=True)
    op.alter_column('scans', 'completed_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('scans', 'started_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.add_column('scan_templates', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('scan_templates', sa.Column('rules', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('scan_templates', sa.Column('excluded_paths', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('scan_templates', sa.Column('file_extensions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.alter_column('scan_templates', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('scan_templates', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('scan_templates', 'config')
    op.add_column('repositories', sa.Column('last_scan_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('repositories', sa.Column('scan_results', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_index('idx_repositories_is_active', 'repositories', ['is_active'], unique=False)
    op.alter_column('repositories', 'default_branch',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('chat_sessions', 'session_metadata')
    op.drop_column('chat_sessions', 'is_active')
    op.drop_constraint(None, 'chat_messages', type_='foreignkey')
    op.drop_column('chat_messages', 'context_data')
    op.drop_column('chat_messages', 'response_time_ms')
    op.drop_column('chat_messages', 'model_used')
    op.drop_column('chat_messages', 'tokens_used')
    op.drop_column('chat_messages', 'message_type')
    op.drop_column('chat_messages', 'user_id')
    # ### end Alembic commands ###
