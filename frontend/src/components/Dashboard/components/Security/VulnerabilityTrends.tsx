import React from 'react';
import { TrendingUp, TrendingDown, Minus } from "lucide-react";
import { EnhancedDashboardData } from '../../types/dashboard.types';

interface VulnerabilityTrendsProps {
  data: EnhancedDashboardData;
}

const VulnerabilityTrends: React.FC<VulnerabilityTrendsProps> = ({ data }) => {
  const trends = data.advancedMetrics?.vulnerabilityTrends?.monthly_trends || [];
  
  if (!trends || trends.length === 0) {
    return (
      <div className="bg-black/20 rounded-lg p-6">
        <h3 className="text-lg font-semibold text-white mb-4 flex items-center">
          <TrendingUp className="w-5 h-5 mr-2" />
          Vulnerability Trends
        </h3>
        <div className="text-center py-8 text-white/60">
          <TrendingUp className="w-12 h-12 mx-auto mb-3 text-white/40" />
          <p>No trend data available</p>
          <p className="text-sm mt-2">Historical data will appear after multiple scans</p>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-black/20 rounded-lg p-6">
      <h3 className="text-lg font-semibold text-white mb-4 flex items-center">
        <TrendingUp className="w-5 h-5 mr-2" />
        Vulnerability Trends
      </h3>
      
      <div className="space-y-4">
        {trends.slice(-6).map((trend, index) => {
          const prevTrend = index > 0 ? trends[index - 1] : null;
          const trendDirection = prevTrend ? 
            (trend.discovered > prevTrend.discovered ? 'up' : 
             trend.discovered < prevTrend.discovered ? 'down' : 'same') : 'same';
          
          return (
            <div key={trend.month} className="flex items-center justify-between py-3 px-4 bg-white/5 rounded-lg">
              <div className="flex items-center space-x-3">
                <div className={`p-1 rounded ${
                  trendDirection === 'up' ? 'bg-red-500/20' :
                  trendDirection === 'down' ? 'bg-green-500/20' : 'bg-gray-500/20'
                }`}>
                  {trendDirection === 'up' ? (
                    <TrendingUp className="w-4 h-4 text-red-400" />
                  ) : trendDirection === 'down' ? (
                    <TrendingDown className="w-4 h-4 text-green-400" />
                  ) : (
                    <Minus className="w-4 h-4 text-gray-400" />
                  )}
                </div>
                <div>
                  <div className="text-white font-medium">{trend.month}</div>
                  <div className="text-white/60 text-sm">
                    {trend.critical} critical, {trend.high} high
                  </div>
                </div>
              </div>
              <div className="text-right">
                <div className="text-white font-bold">{trend.discovered}</div>
                <div className="text-white/60 text-sm">discovered</div>
                {trend.fixed > 0 && (
                  <div className="text-green-400 text-sm">{trend.fixed} fixed</div>
                )}
              </div>
            </div>
          );
        })}
      </div>

      {/* Summary */}
      <div className="mt-6 pt-4 border-t border-white/10">
        <div className="grid grid-cols-3 gap-4 text-center">
          <div>
            <div className="text-xl font-bold text-white">
              {trends.reduce((sum, t) => sum + t.discovered, 0)}
            </div>
            <div className="text-white/60 text-sm">Total Discovered</div>
          </div>
          <div>
            <div className="text-xl font-bold text-green-400">
              {trends.reduce((sum, t) => sum + t.fixed, 0)}
            </div>
            <div className="text-white/60 text-sm">Total Fixed</div>
          </div>
          <div>
            <div className="text-xl font-bold text-red-400">
              {trends.reduce((sum, t) => sum + t.critical, 0)}
            </div>
            <div className="text-white/60 text-sm">Critical Issues</div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityTrends;